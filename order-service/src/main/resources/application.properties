spring.application.name=order-service
spring.datasource.url=jdbc:postgresql://localhost:5432/order-service
spring.datasource.username=postgres
spring.datasource.password=1105

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.generate_statistics=true

server.error.whitelabel.enabled=true
debug=false

server.port=0
eureka.client.serviceUrl.defaultZone=http://admin:admin@localhost:8761/eureka

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#resilience4j Props
resilience4j.circuitbreaker.instances.inventoryCheck.register-health-indicator=true
resilience4j.circuitbreaker.instances.inventoryCheck.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventoryCheck.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.inventoryCheck.sliding-window-size=5
resilience4j.circuitbreaker.instances.inventoryCheck.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventoryCheck.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.inventoryCheck.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventoryCheck.automatic-transition-from-open-to-half-open-enabled=true

#resilience4j timeout Props
resilience4j.timelimiter.instances.inventoryCheck.timeout-duration=5s
#resilience4j retry Props
resilience4j.retry.instances.inventoryCheck.max-attempts=3
resilience4j.retry.instances.inventoryCheck.wait-duration=3s

# kafka props
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=dto:id.surahman.orderservice.entity.Order